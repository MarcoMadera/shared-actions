name: Respond to Bot Mentions

on:
  workflow_call:
    secrets:
      token:
        required: true
      GIT_USER_EMAIL:
        required: false
      GIT_USER_NAME:
        required: false
    inputs:
      issue_id:
        required: false
        type: string

jobs:
  respond_to_bot:
    runs-on: ubuntu-latest
    steps:
      - name: Check for Bot Mention
        id: check_for_bot_mention
        run: |
          COMMENT_BODY="${{ github.event.comment.body }}"
          USERNAME="${{ github.event.comment.user.login }}"

          if [[ "$COMMENT_BODY" == *"@SawBot"* ]]; then
            RESPONSE="Hi @$USERNAME!"
            echo "response=$RESPONSE" >> $GITHUB_ENV

            if [[ "$COMMENT_BODY" == *"@SawBot retry update submodule"* ]]; then
              echo "command=retry_update_submodule" >> $GITHUB_ENV
              echo "username=$USERNAME" >> $GITHUB_ENV
              RESPONSE="$RESPONSE - Updating submodule."
            fi
          fi

      - name: Add Response Comment
        if: env.response != ''
        uses: actions/github-script@v4
        with:
          script: |
            const response = process.env.response;
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: response
            });
          github-token: ${{ secrets.token }}

      - name: Retry Update Submodule
        if: env.command == 'retry_update_submodule'
        uses: MarcoMadera/shared-actions/.github/actions/update-submodule@v1.2
        with:
          token: ${{ secrets.token }}
          git_user_email: ${{ secrets.GIT_USER_EMAIL }}
          git_user_name: ${{ secrets.GIT_USER_NAME }}
          issue_id: ${{inputs.issue_id}}
